{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/lib/actions.js"],"sourcesContent":["'use client';\n\nfunction formatGetPostParam(postType) {\n    if (postType === 0) {\n        return 'qna?class=0';\n    } else if (postType === 1) {\n        return 'codeshare';\n    } else if (postType === 2) {\n        return 'daily';\n    } else {\n        return new Error('Invalid post type');\n    }\n}\n\n\nexport async function fetchPostByTypeDB(postType) {\n    const postTypeParam = formatGetPostParam(postType);\n    try {\n        const url = `/api/post/${postTypeParam}`;\n        const cardsData = await fetch(url, {\n            method: 'GET',\n        });\n        console.log(JSON.stringify(cardsData))\n        return cardsData.data;\n    } catch (error) {\n        console.error('1Error:', error);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA,SAAS,mBAAmB,QAAQ;IAChC,IAAI,aAAa,GAAG;QAChB,OAAO;IACX,OAAO,IAAI,aAAa,GAAG;QACvB,OAAO;IACX,OAAO,IAAI,aAAa,GAAG;QACvB,OAAO;IACX,OAAO;QACH,OAAO,IAAI,MAAM;IACrB;AACJ;AAGO,eAAe,kBAAkB,QAAQ;IAC5C,MAAM,gBAAgB,mBAAmB;IACzC,IAAI;QACA,MAAM,MAAM,CAAC,UAAU,EAAE,eAAe;QACxC,MAAM,YAAY,MAAM,MAAM,KAAK;YAC/B,QAAQ;QACZ;QACA,QAAQ,GAAG,CAAC,KAAK,SAAS,CAAC;QAC3B,OAAO,UAAU,IAAI;IACzB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,WAAW;IAC7B;AACJ"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/ui/dashboard/comments.js"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Chat from \"../chat\";\nimport { fetchCommentByPostId } from \"@/app/lib/data\";\n\nexport default function CommentsBox({ onClose, postId }) {\n    const comments = fetchCommentByPostId(postId);\n    const commentsRef = useRef(null);\n\n    const addComment = (newComment) => {\n        // 각 게시물 별로 받아야 하니까 배열에 게시물 id 추가\n        const timestamp = new Date().toLocaleString(\"ko-KR\", {\n            // 시간 표시\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n        });\n        // 댓글 입력한 사용자 id까지 받는 걸로 수정\n        setComments((prev) => [\n            ...prev,\n            { content: newComment, time: timestamp },\n        ]);\n    };\n\n    return (\n        <div className=\"flex flex-col bg-white border w-[25%] h-[100%] fixed top-0 left-0\">\n            <button\n                onClick={onClose}\n                className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-800\"\n            >\n                X\n            </button>\n\n            {/* 댓글 목록 */}\n            <div\n                className=\"flex-1 overflow-y-auto space-y-5 mt-12 flex flex-col items-center\"\n                ref={commentsRef}\n            >\n                {comments.map((comment, index) => (\n                    // 댓글 화면\n                    <div\n                        key={index}\n                        className=\"bg-gray-100 p-4 rounded-2xl w-5/6\" // 댓글 요소 중앙 정렬\n                    >\n                        <p className=\"text-sm font-semibold\">\n                            사용자 이름{/* comment.userid로 고치기 */}\n                        </p>\n                        <p className=\"text-sm text-gray-700 break-all\">\n                            {comment.content}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">{comment.time}</p>\n                    </div>\n                ))}\n            </div>\n\n            {/* 댓글 입력창 */}\n            <Chat onSubmit={addComment} isComment={true} />\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE;;IACnD,MAAM,WAAW,CAAA,GAAA,qHAAA,CAAA,uBAAoB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAE3B,MAAM,aAAa,CAAC;QAChB,iCAAiC;QACjC,MAAM,YAAY,IAAI,OAAO,cAAc,CAAC,SAAS;YACjD,QAAQ;YACR,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACZ;QACA,2BAA2B;QAC3B,YAAY,CAAC,OAAS;mBACf;gBACH;oBAAE,SAAS;oBAAY,MAAM;gBAAU;aAC1C;IACL;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBACG,SAAS;gBACT,WAAU;0BACb;;;;;;0BAKD,6LAAC;gBACG,WAAU;gBACV,KAAK;0BAEJ,SAAS,GAAG,CAAC,CAAC,SAAS,QACpB,QAAQ;kCACR,6LAAC;wBAEG,WAAU,oCAAoC,cAAc;;;0CAE5D,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;0CAGrC,6LAAC;gCAAE,WAAU;0CACR,QAAQ,OAAO;;;;;;0CAEpB,6LAAC;gCAAE,WAAU;0CAAyB,QAAQ,IAAI;;;;;;;uBAT7C;;;;;;;;;;0BAejB,6LAAC,oHAAA,CAAA,UAAI;gBAAC,UAAU;gBAAY,WAAW;;;;;;;;;;;;AAGnD;GAxDwB;KAAA"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}