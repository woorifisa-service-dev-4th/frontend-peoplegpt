{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/lib/actions.js"],"sourcesContent":["'use client';\n\nfunction formatGetPostParam(postType) {\n    if (postType === 0) {\n        return 'qna?class=0';\n    } else if (postType === 1) {\n        return 'codeshare';\n    } else if (postType === 2) {\n        return 'daily';\n    } else {\n        return new Error('Invalid post type');\n    }\n}\n\n\nexport async function fetchPostByTypeDB(postType) {\n    const postTypeParam = formatGetPostParam(postType);\n    try {\n        const url = `/api/post/${postTypeParam}`;\n        const cardsData = await fetch(url, {\n            method: 'GET',\n        });\n        console.log(JSON.stringify(cardsData))\n        return cardsData.data;\n    } catch (error) {\n        console.error('1Error:', error);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA,SAAS,mBAAmB,QAAQ;IAChC,IAAI,aAAa,GAAG;QAChB,OAAO;IACX,OAAO,IAAI,aAAa,GAAG;QACvB,OAAO;IACX,OAAO,IAAI,aAAa,GAAG;QACvB,OAAO;IACX,OAAO;QACH,OAAO,IAAI,MAAM;IACrB;AACJ;AAGO,eAAe,kBAAkB,QAAQ;IAC5C,MAAM,gBAAgB,mBAAmB;IACzC,IAAI;QACA,MAAM,MAAM,CAAC,UAAU,EAAE,eAAe;QACxC,MAAM,YAAY,MAAM,MAAM,KAAK;YAC/B,QAAQ;QACZ;QACA,QAAQ,GAAG,CAAC,KAAK,SAAS,CAAC;QAC3B,OAAO,UAAU,IAAI;IACzB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,WAAW;IAC7B;AACJ"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/lib/test.js"],"sourcesContent":["import { sql } from '@vercel/postgres';\n\nexport async function getQnATester(type) {\n    const isAll = Number(type) === Number(0);\n    try {\n        const query = isAll\n            ? await sql`\n                SELECT * FROM POST WHERE type_id = 1 AND status = 0\n                ORDER BY POST.created_at DESC\n            `\n            :\n            await sql`\n                SELECT * FROM POST WHERE class_id = ${type} AND type_id = 1 AND status = 0\n                ORDER BY POST.created_at DESC\n            `;\n        console.log(\"QNA DB tester:\", query.rows);\n        return await query.rows;\n    } catch (error) {\n        console.log(\"QNA DB tester:\", error);\n        return error;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,eAAe,aAAa,IAAI;IACnC,MAAM,QAAQ,OAAO,UAAU,OAAO;IACtC,IAAI;QACA,MAAM,QAAQ,QACR,MAAM,oLAAA,CAAA,MAAG,CAAC;;;YAGZ,CAAC,GAED,MAAM,oLAAA,CAAA,MAAG,CAAC;oDAC8B,EAAE,KAAK;;YAE/C,CAAC;QACL,QAAQ,GAAG,CAAC,kBAAkB,MAAM,IAAI;QACxC,OAAO,MAAM,MAAM,IAAI;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,kBAAkB;QAC9B,OAAO;IACX;AACJ"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/ui/dashboard/comments.js"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Chat from \"../chat\";\nimport { fetchCommentByPostId } from \"@/app/lib/data\";\n\nexport default function CommentsBox({ onClose, postId }) {\n    const comments = fetchCommentByPostId(postId);\n    const commentsRef = useRef(null);\n\n    const addComment = (newComment) => {\n        // 각 게시물 별로 받아야 하니까 배열에 게시물 id 추가\n        const timestamp = new Date().toLocaleString(\"ko-KR\", {\n            // 시간 표시\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n        });\n        // 댓글 입력한 사용자 id까지 받는 걸로 수정\n        setComments((prev) => [\n            ...prev,\n            { content: newComment, time: timestamp },\n        ]);\n    };\n\n    return (\n        <div className=\"flex flex-col bg-white border w-[25%] h-[100%] fixed top-0 left-0\">\n            <button\n                onClick={onClose}\n                className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-800\"\n            >\n                X\n            </button>\n\n            {/* 댓글 목록 */}\n            <div\n                className=\"flex-1 overflow-y-auto space-y-5 mt-12 flex flex-col items-center\"\n                ref={commentsRef}\n            >\n                {comments.map((comment, index) => (\n                    // 댓글 화면\n                    <div\n                        key={index}\n                        className=\"bg-gray-100 p-4 rounded-2xl w-5/6\" // 댓글 요소 중앙 정렬\n                    >\n                        <p className=\"text-sm font-semibold\">\n                            사용자 이름{/* comment.userid로 고치기 */}\n                        </p>\n                        <p className=\"text-sm text-gray-700 break-all\">\n                            {comment.content}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">{comment.time}</p>\n                    </div>\n                ))}\n            </div>\n\n            {/* 댓글 입력창 */}\n            <Chat onSubmit={addComment} isComment={true} />\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE;;IACnD,MAAM,WAAW,CAAA,GAAA,qHAAA,CAAA,uBAAoB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAE3B,MAAM,aAAa,CAAC;QAChB,iCAAiC;QACjC,MAAM,YAAY,IAAI,OAAO,cAAc,CAAC,SAAS;YACjD,QAAQ;YACR,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACZ;QACA,2BAA2B;QAC3B,YAAY,CAAC,OAAS;mBACf;gBACH;oBAAE,SAAS;oBAAY,MAAM;gBAAU;aAC1C;IACL;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBACG,SAAS;gBACT,WAAU;0BACb;;;;;;0BAKD,6LAAC;gBACG,WAAU;gBACV,KAAK;0BAEJ,SAAS,GAAG,CAAC,CAAC,SAAS,QACpB,QAAQ;kCACR,6LAAC;wBAEG,WAAU,oCAAoC,cAAc;;;0CAE5D,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;0CAGrC,6LAAC;gCAAE,WAAU;0CACR,QAAQ,OAAO;;;;;;0CAEpB,6LAAC;gCAAE,WAAU;0CAAyB,QAAQ,IAAI;;;;;;;uBAT7C;;;;;;;;;;0BAejB,6LAAC,oHAAA,CAAA,UAAI;gBAAC,UAAU;gBAAY,WAAW;;;;;;;;;;;;AAGnD;GAxDwB;KAAA"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/ui/dashboard/cards.js"],"sourcesContent":["'use client';\nimport { fetchPostByTypeDB } from \"@/app/lib/actions\";\nimport { fetchCommentByPostId, fetchPostByType } from \"@/app/lib/data\";\nimport { getQnATester } from \"@/app/lib/test\";\nimport CommentsBox from \"@/app/ui/dashboard/comments\";\n\nexport default function Cards({postType}) {\n\n    const cardsData = fetchPostByTypeDB(postType);\n\n    const [isCommentsOpen, setIsCommentsOpen] = useState(false);\n    const [openPostId, setOpenPostId] = useState(null);\n\n    const toggleOpen = () => {\n        setIsCommentsOpen(true);\n    };\n\n    const toggleClose = () => {\n        setIsCommentsOpen(false);\n        setOpenPostId(null);\n    }\n\n    return (\n        <div className=\"grid gap-4\">\n            {cardsData.map((card) => (\n                // console.log(\"FUCNTIONCARD: \", card),\n                <Card\n                    key={card.id}\n                    postId={card.id}\n                    title={card.title}\n                    content={card.content}\n                    tags={card.tag}\n                    createAt={card.createAt}\n                    commentCount={fetchCommentByPostId(card.id).length}\n                    isCommentsOpen={isCommentsOpen}\n                    toggleOpen={toggleOpen}\n                    setOpenPostId={setOpenPostId}\n                    postType={postType}\n                />\n            ))}\n            {isCommentsOpen && <CommentsBox onClose={toggleClose} postId={openPostId}/>}\n        </div>\n        \n    );\n}\n\nfunction Card({postId, title, content, tags, createdAt, commentCount, toggleOpen, setOpenPostId, postType}) {\n    const isCodeShare = postType === postType[1];\n    return (\n        <div>\n            <div className=\"rounded-xl bg-gray-50 p-2 shadow-sm\">\n                {!isCodeShare &&\n                    <>\n                        <div className=\"flex p-3\">\n                            <h3 className=\"ml-2 text-3xl font-medium\">{title}</h3>\n                        </div>                    \n                    </>\n                }\n\n                <div className=\"gap-3 grid\">\n                    <p\n                        className={`rounded-xl bg-white px-5 py-8  text-xl`}\n                    >\n                        {content}\n                    </p>\n                    {!isCodeShare && \n                        <>\n                            <div className=\"px-3 flex justify-start gap-2\">\n                            {tags.map((tag, index) => (\n                                <p\n                                    key={index}\n                                    className={`flex rounded-xl px-2 py-1 bg-pink-500 text-m`}\n                                >\n                                    #{tag}\n                                </p>\n                            ))}\n                            </div>\n                            <p className={`px-3 text-gray-500 text-m`}>\n                                {createdAt}\n                            </p>\n                            <button onClick={() => {\n                                toggleOpen();\n                                setOpenPostId(postId);\n                            } }>\n                                <p\n                                    className={`px-3 text-blue-500 text-m`}\n                                >\n                                    {commentCount} comment\n                                </p>\n                            </button>\n                        </>\n                    }\n                </div>\n            </div>\n            \n        </div>\n    );    \n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAMe,SAAS,MAAM,EAAC,QAAQ,EAAC;;IAEpC,MAAM,YAAY,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE;IAEpC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,SAAS;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,SAAS;IAE7C,MAAM,aAAa;QACf,kBAAkB;IACtB;IAEA,MAAM,cAAc;QAChB,kBAAkB;QAClB,cAAc;IAClB;IAEA,qBACI,6LAAC;QAAI,WAAU;;YACV,UAAU,GAAG,CAAC,CAAC,OACZ,uCAAuC;8BACvC,6LAAC;oBAEG,QAAQ,KAAK,EAAE;oBACf,OAAO,KAAK,KAAK;oBACjB,SAAS,KAAK,OAAO;oBACrB,MAAM,KAAK,GAAG;oBACd,UAAU,KAAK,QAAQ;oBACvB,cAAc,CAAA,GAAA,qHAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,EAAE,EAAE,MAAM;oBAClD,gBAAgB;oBAChB,YAAY;oBACZ,eAAe;oBACf,UAAU;mBAVL,KAAK,EAAE;;;;;YAanB,gCAAkB,6LAAC,qIAAA,CAAA,UAAW;gBAAC,SAAS;gBAAa,QAAQ;;;;;;;;;;;;AAI1E;GAtCwB;KAAA;AAwCxB,SAAS,KAAK,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAC;IACtG,MAAM,cAAc,aAAa,QAAQ,CAAC,EAAE;IAC5C,qBACI,6LAAC;kBACG,cAAA,6LAAC;YAAI,WAAU;;gBACV,CAAC,6BACE;8BACI,cAAA,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;;;;;;;8BAKvD,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BACG,WAAW,CAAC,sCAAsC,CAAC;sCAElD;;;;;;wBAEJ,CAAC,6BACE;;8CACI,6LAAC;oCAAI,WAAU;8CACd,KAAK,GAAG,CAAC,CAAC,KAAK,sBACZ,6LAAC;4CAEG,WAAW,CAAC,4CAA4C,CAAC;;gDAC5D;gDACK;;2CAHG;;;;;;;;;;8CAOb,6LAAC;oCAAE,WAAW,CAAC,yBAAyB,CAAC;8CACpC;;;;;;8CAEL,6LAAC;oCAAO,SAAS;wCACb;wCACA,cAAc;oCAClB;8CACI,cAAA,6LAAC;wCACG,WAAW,CAAC,yBAAyB,CAAC;;4CAErC;4CAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlD;MAnDS"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/%28dashboard%29/qna/page.js"],"sourcesContent":["'use client'\n\nimport { postType } from \"@/app/lib/data\";\nimport Cards from \"@/app/ui/dashboard/cards\";\nimport { Suspense } from \"react\";\n\nexport default function Page() {\n    const [isCommentsOpen, setIsCommentsOpen,] = useState(false);\n    const [openPostId, setOpenPostId] = useState(null);\n\n\n    return (\n        <div className=\"relative\">\n            <Suspense fallback={<PostSkeleton />}>\n                <Cards \n                    postType={0} \n                    isCommentsOpen={isCommentsOpen} \n                    setIsCommentsOpen={setIsCommentsOpen} \n                    openPostId={openPostId}\n                    setOpenPostId={setOpenPostId}\n                />\n            </Suspense>\n        </div>\n    );\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACpB,MAAM,CAAC,gBAAgB,kBAAmB,GAAG,SAAS;IACtD,MAAM,CAAC,YAAY,cAAc,GAAG,SAAS;IAG7C,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,6JAAA,CAAA,WAAQ;YAAC,wBAAU,6LAAC;;;;;sBACjB,cAAA,6LAAC,kIAAA,CAAA,UAAK;gBACF,UAAU;gBACV,gBAAgB;gBAChB,mBAAmB;gBACnB,YAAY;gBACZ,eAAe;;;;;;;;;;;;;;;;AAKnC;GAlBwB;KAAA"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}