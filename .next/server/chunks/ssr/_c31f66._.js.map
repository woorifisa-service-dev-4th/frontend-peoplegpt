{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/lib/actions.js"],"sourcesContent":["'use server';\n\nfunction formatGetPostParam(postType) {\n    if (postType === 0) {\n        return 'qna/?class=0';\n    } else if (postType === 1) {\n        return 'codeshare';\n    } else if (postType === 2) {\n        return 'daily';\n    } else {\n        return new Error('Invalid post type');\n    }\n}\n\n\nexport async function fetchPostByTypeDB(postType) {\n    const postTypeParam = formatGetPostParam(postType);\n    try {\n        const cardsData = await fetch(`/api/post/${postTypeParam}`, {\n            method: 'GET',\n        }).then(r => r.json());\n        return cardsData;\n    } catch (error) {\n        console.error('Error:', error);\n    }\n}\n"],"names":[],"mappings":";;;;;IAesB"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/ui/dashboard/comments.js"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Chat from \"../chat\";\nimport { fetchCommentByPostId } from \"@/app/lib/data\";\n\nexport default function CommentsBox({ onClose, postId }) {\n    const comments = fetchCommentByPostId(postId);\n    const commentsRef = useRef(null);\n\n    const addComment = (newComment) => {\n        // 각 게시물 별로 받아야 하니까 배열에 게시물 id 추가\n        const timestamp = new Date().toLocaleString(\"ko-KR\", {\n            // 시간 표시\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n        });\n        // 댓글 입력한 사용자 id까지 받는 걸로 수정\n        setComments((prev) => [\n            ...prev,\n            { content: newComment, time: timestamp },\n        ]);\n    };\n\n    return (\n        <div className=\"flex flex-col bg-white border w-[25%] h-[100%] fixed top-0 left-0\">\n            <button\n                onClick={onClose}\n                className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-800\"\n            >\n                X\n            </button>\n\n            {/* 댓글 목록 */}\n            <div\n                className=\"flex-1 overflow-y-auto space-y-5 mt-12 flex flex-col items-center\"\n                ref={commentsRef}\n            >\n                {comments.map((comment, index) => (\n                    // 댓글 화면\n                    <div\n                        key={index}\n                        className=\"bg-gray-100 p-4 rounded-2xl w-5/6\" // 댓글 요소 중앙 정렬\n                    >\n                        <p className=\"text-sm font-semibold\">\n                            사용자 이름{/* comment.userid로 고치기 */}\n                        </p>\n                        <p className=\"text-sm text-gray-700 break-all\">\n                            {comment.content}\n                        </p>\n                        <p className=\"text-xs text-gray-400\">{comment.time}</p>\n                    </div>\n                ))}\n            </div>\n\n            {/* 댓글 입력창 */}\n            <Chat onSubmit={addComment} isComment={true} />\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE;IACnD,MAAM,WAAW,CAAA,GAAA,kHAAA,CAAA,uBAAoB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAE3B,MAAM,aAAa,CAAC;QAChB,iCAAiC;QACjC,MAAM,YAAY,IAAI,OAAO,cAAc,CAAC,SAAS;YACjD,QAAQ;YACR,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACZ;QACA,2BAA2B;QAC3B,YAAY,CAAC,OAAS;mBACf;gBACH;oBAAE,SAAS;oBAAY,MAAM;gBAAU;aAC1C;IACL;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBACG,SAAS;gBACT,WAAU;0BACb;;;;;;0BAKD,8OAAC;gBACG,WAAU;gBACV,KAAK;0BAEJ,SAAS,GAAG,CAAC,CAAC,SAAS,QACpB,QAAQ;kCACR,8OAAC;wBAEG,WAAU,oCAAoC,cAAc;;;0CAE5D,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;0CAGrC,8OAAC;gCAAE,WAAU;0CACR,QAAQ,OAAO;;;;;;0CAEpB,8OAAC;gCAAE,WAAU;0CAAyB,QAAQ,IAAI;;;;;;;uBAT7C;;;;;;;;;;0BAejB,8OAAC,iHAAA,CAAA,UAAI;gBAAC,UAAU;gBAAY,WAAW;;;;;;;;;;;;AAGnD"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/ui/dashboard/cards.js"],"sourcesContent":["'use client';\n\nimport { fetchPostByTypeDB } from \"@/app/lib/actions\";\nimport { fetchCommentByPostId, fetchPostByType } from \"@/app/lib/data\";\nimport CommentsBox from \"@/app/ui/dashboard/comments\";\nimport {  useState } from \"react\";\n\nexport default function Cards({postType}) {\n\n    const cardsData = fetchPostByTypeDB(postType);\n\n    const [isCommentsOpen, setIsCommentsOpen] = useState(false);\n    const [openPostId, setOpenPostId] = useState(null);\n\n    const toggleOpen = () => {\n        setIsCommentsOpen(true);\n    };\n\n    const toggleClose = () => {\n        setIsCommentsOpen(false);\n        setOpenPostId(null);\n    }\n\n    return (\n        <div className=\"grid gap-4\">\n            {cardsData.map((card) => (\n                <Card\n                    key={card.id}\n                    postId={card.id}\n                    title={card.title}\n                    content={card.content}\n                    tags={card.tags}\n                    createAt={card.createAt}\n                    commentCount={fetchCommentByPostId(card.id).length}\n                    isCommentsOpen={isCommentsOpen}\n                    toggleOpen={toggleOpen}\n                    setOpenPostId={setOpenPostId}\n                    postType={postType}\n                />\n            ))}\n            {isCommentsOpen && <CommentsBox onClose={toggleClose} postId={openPostId}/>}\n        </div>\n        \n    );\n}\n\nfunction Card({postId, title, content, tags, createdAt, commentCount, toggleOpen, setOpenPostId, postType}) {\n    const isCodeShare = postType === postType[1];\n    return (\n        <div>\n            <div className=\"rounded-xl bg-gray-50 p-2 shadow-sm\">\n                {!isCodeShare &&\n                    <>\n                        <div className=\"flex p-3\">\n                            <h3 className=\"ml-2 text-3xl font-medium\">{title}</h3>\n                        </div>                    \n                    </>\n                }\n\n                <div className=\"gap-3 grid\">\n                    <p\n                        className={`rounded-xl bg-white px-5 py-8  text-xl`}\n                    >\n                        {content}\n                    </p>\n                    {!isCodeShare && \n                        <>\n                            <div className=\"px-3 flex justify-start gap-2\">\n                            {tags.map((tag, index) => (\n                                <p\n                                    key={index}\n                                    className={`flex rounded-xl px-2 py-1 bg-pink-500 text-m`}\n                                >\n                                    #{tag}\n                                </p>\n                            ))}\n                            </div>\n                            <p className={`px-3 text-gray-500 text-m`}>\n                                {createdAt}\n                            </p>\n                            <button onClick={() => {\n                                toggleOpen();\n                                setOpenPostId(postId);\n                            } }>\n                                <p\n                                    className={`px-3 text-blue-500 text-m`}\n                                >\n                                    {commentCount} comment\n                                </p>\n                            </button>\n                        </>\n                    }\n                </div>\n            </div>\n            \n        </div>\n    );    \n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS,MAAM,EAAC,QAAQ,EAAC;IAEpC,MAAM,YAAY,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD,EAAE;IAEpC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,aAAa;QACf,kBAAkB;IACtB;IAEA,MAAM,cAAc;QAChB,kBAAkB;QAClB,cAAc;IAClB;IAEA,qBACI,8OAAC;QAAI,WAAU;;YACV,UAAU,GAAG,CAAC,CAAC,qBACZ,8OAAC;oBAEG,QAAQ,KAAK,EAAE;oBACf,OAAO,KAAK,KAAK;oBACjB,SAAS,KAAK,OAAO;oBACrB,MAAM,KAAK,IAAI;oBACf,UAAU,KAAK,QAAQ;oBACvB,cAAc,CAAA,GAAA,kHAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,EAAE,EAAE,MAAM;oBAClD,gBAAgB;oBAChB,YAAY;oBACZ,eAAe;oBACf,UAAU;mBAVL,KAAK,EAAE;;;;;YAanB,gCAAkB,8OAAC,kIAAA,CAAA,UAAW;gBAAC,SAAS;gBAAa,QAAQ;;;;;;;;;;;;AAI1E;AAEA,SAAS,KAAK,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAC;IACtG,MAAM,cAAc,aAAa,QAAQ,CAAC,EAAE;IAC5C,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAI,WAAU;;gBACV,CAAC,6BACE;8BACI,cAAA,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAG,WAAU;sCAA6B;;;;;;;;;;;;8BAKvD,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BACG,WAAW,CAAC,sCAAsC,CAAC;sCAElD;;;;;;wBAEJ,CAAC,6BACE;;8CACI,8OAAC;oCAAI,WAAU;8CACd,KAAK,GAAG,CAAC,CAAC,KAAK,sBACZ,8OAAC;4CAEG,WAAW,CAAC,4CAA4C,CAAC;;gDAC5D;gDACK;;2CAHG;;;;;;;;;;8CAOb,8OAAC;oCAAE,WAAW,CAAC,yBAAyB,CAAC;8CACpC;;;;;;8CAEL,8OAAC;oCAAO,SAAS;wCACb;wCACA,cAAc;oCAClB;8CACI,cAAA,8OAAC;wCACG,WAAW,CAAC,yBAAyB,CAAC;;4CAErC;4CAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlD"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/app/%28dashboard%29/qna/page.js"],"sourcesContent":["'use client'\n\nimport { postType } from \"@/app/lib/data\";\nimport Cards from \"@/app/ui/dashboard/cards\";\n\nexport default function Page() {\n\n\n    return (\n        <div className=\"relative\">\n            <Cards postType={0}/>\n        </div>\n    );\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IAGpB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,+HAAA,CAAA,UAAK;YAAC,UAAU;;;;;;;;;;;AAG7B"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/node_modules/next/src/client/app-call-server.ts"],"sourcesContent":["import { startTransition, useCallback } from 'react'\nimport {\n  ACTION_SERVER_ACTION,\n  type ReducerActions,\n  type ServerActionDispatcher,\n} from './components/router-reducer/router-reducer-types'\n\nlet globalServerActionDispatcher = null as ServerActionDispatcher | null\n\nexport function useServerActionDispatcher(\n  dispatch: React.Dispatch<ReducerActions>\n) {\n  const serverActionDispatcher: ServerActionDispatcher = useCallback(\n    (actionPayload) => {\n      startTransition(() => {\n        dispatch({\n          ...actionPayload,\n          type: ACTION_SERVER_ACTION,\n        })\n      })\n    },\n    [dispatch]\n  )\n  globalServerActionDispatcher = serverActionDispatcher\n}\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  const actionDispatcher = globalServerActionDispatcher\n\n  if (!actionDispatcher) {\n    throw new Error('Invariant: missing action dispatcher.')\n  }\n\n  return new Promise((resolve, reject) => {\n    actionDispatcher({\n      actionId,\n      actionArgs,\n      resolve,\n      reject,\n    })\n  })\n}\n"],"names":["callServer","useServerActionDispatcher","globalServerActionDispatcher","dispatch","serverActionDispatcher","useCallback","actionPayload","startTransition","type","ACTION_SERVER_ACTION","actionId","actionArgs","actionDispatcher","Error","Promise","resolve","reject"],"mappings":";;;;;;;;;;;;;;;IA0BsBA,UAAU,EAAA;eAAVA;;IAjBNC,yBAAyB,EAAA;eAAzBA;;;uBAT6B;oCAKtC;AAEP,IAAIC,+BAA+B;AAE5B,SAASD,0BACdE,QAAwC;IAExC,MAAMC,yBAAiDC,CAAAA,GAAAA,OAAAA,WAAW,EAChE,CAACC;QACCC,CAAAA,GAAAA,OAAAA,eAAe,EAAC;YACdJ,SAAS;gBACP,GAAGG,aAAa;gBAChBE,MAAMC,oBAAAA,oBAAoB;YAC5B;QACF;IACF,GACA;QAACN;KAAS;IAEZD,+BAA+BE;AACjC;AAEO,eAAeJ,WAAWU,QAAgB,EAAEC,UAAiB;IAClE,MAAMC,mBAAmBV;IAEzB,IAAI,CAACU,kBAAkB;QACrB,MAAM,IAAIC,MAAM;IAClB;IAEA,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3BJ,iBAAiB;YACfF;YACAC;YACAI;YACAC;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["findSourceMapURL","basePath","process","env","__NEXT_ROUTER_BASEPATH","pathname","NODE_ENV","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":";;;;+BAGaA,oBAAAA;;;eAAAA;;;AAHb,MAAMC,WAAWC,QAAQC,GAAG,CAACC,sBAAsB,MAAI;AACvD,MAAMC,WAAY,KAAEJ,WAAS;AAEtB,MAAMD,mBACXE,QAAQC,GAAG,CAACG,QAAQ,KAAK,cACrB,SAASN,iBAAiBO,QAAgB;IACxC,IAAIA,aAAa,IAAI;QACnB,OAAO;IACT;IAEA,IACEA,SAASC,UAAU,CAACC,SAASC,QAAQ,CAACC,MAAM,KAC5CJ,SAASK,QAAQ,CAAC,kBAClB;QACA,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAQ,KAAEL,WAAS;IACrB;IAEA,MAAMM,MAAM,IAAIC,IAAIT,UAAUI,SAASC,QAAQ,CAACC,MAAM;IACtDE,IAAIE,YAAY,CAACC,GAAG,CAAC,YAAYT;IAEjC,OAAOM,IAAII,IAAI;AACjB,IACAC","ignoreList":[0]}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client-edge.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactServerDOMTurbopackClientEdge\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClientEdge"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/fisa/frontend-peoplegpt/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,4JAAiC,EAC7CL,qBAAqB","ignoreList":[0]}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}